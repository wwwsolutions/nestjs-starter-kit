### Bret Fisher - Docker for Node.js Projects From a Docker Captain [Udemy 2020]

# stick with 2.x versions if you aren't using this yaml file with swarm/k8s
version: '2.4'

services:
  # traefik:
  #   image: traefik:v2.5.6
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - 8080:80
  #   command:
  #     - --docker
  #     - --docker.domain=traefik
  #     - --docker.watch
  #     - --api
  #     - --defaultentrypoints=http,https
  #   labels:
  #     - traefik.port=8080
  #     - traefik.frontend.rule=Host:traefik.localhost
  #   networks:
  #     - frontend
  #     - backend

  # redis:
  #   image: redis:6.2.6
  #   networks:
  #     - frontend
  #   healthcheck:
  #     test: redis-cli ping

  postgres:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    # environment:
    #   - DATABASE_HOST=${POSTGRES_HOSTNAME}
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: pg_isready -h 127.0.0.1

  api:
    image: nest-api
    init: true
    build:
      context: .
      target: dev
    ports:
      - 3000:3000
    networks:
      - backend
    volumes:
      # - .:/opt/app:delegated
      - .:/opt/app
    depends_on:
      - postgres
    #   - redis

networks:
  frontend:
  backend:

volumes:
  postgres-data:


# services: 
#   html: 
#     image: html 
#     environment: 
#       -apiPath=http://api:3333    
#     ports:      
#       - '8080:3334'  
#   api:    
#     image: api    
#     ports:      
#     - '8081:3333'