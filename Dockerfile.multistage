# FROM node:lts-alpine AS base
# # Setup a home directory and file permissions
# RUN mkdir -p /home/node/app
# RUN chown -R node:node /home/node/app && chmod -R 770 /home/node/app
# WORKDIR /home/node/app
# COPY --chown=node:node ./package.json ./package.json
# COPY --chown=node:node ./yarn.lock ./yarn.lock
# COPY --chown=node:node ./.yarn ./.yarn/
# COPY --chown=node:node ./.yarnrc.yml ./.yarnrc.yml


# #####################################
# #        BACKEND ENVIRONMENT        #
# #####################################

# # FROM base AS backend-base
# # COPY package.json yarn.lock ./

# FROM base AS backend-dev
# WORKDIR /home/node/app
# # Copy the rest of our sources from the host to the container
# COPY --chown=node:node . ./
# USER node
# RUN yarn install && yarn cache clean && yarn prod
# EXPOSE 3000
# # Set the default command to our file watcher/dev runtime (since this is our dev target).
# CMD ["npm", "run", "dev"]


# FROM base AS backend-prod
# WORKDIR /home/node/app
# WORKDIR /app
# USER node
# # Copy client-side build
# COPY --chown=node:node --from=backend-dev /home/node/app/dist ./dist/
# # Copy server-side runtime npm modules
# COPY --chown=node:node --from=base /home/node/app/node_modules ./node_modules
# # Copy everything else we need to run.
# COPY --chown=node:node ./package.json ./package.json
# COPY --chown=node:node ./yarn.lock ./yarn.lock
# # COPY --chown=node:node ./assets ./assets
# # COPY --chown=node:node ./bin ./bin
# # COPY --chown=node:node ./src ./src
# EXPOSE 3000
# RUN yarn install --production && yarn cache clean
# CMD ["npm", "run", "prod"]



#####################################
#       FRONTEND ENVIRONMENT        #
#####################################

# FROM base AS frontend-base
# COPY frontend/package.json frontend/yarn.lock ./
# RUN yarn install && yarn cache clean
# CMD ["yarn", "start"]

# FROM frontend-base AS frontend-final
# COPY frontend/public ./public
# COPY frontend/src ./src
# RUN yarn build

#####################################
#       COMBINED ENVIRONMENT        #
#####################################

# FROM backend-base AS final
# RUN yarn install --production && yarn cache clean
# COPY backend/src ./src
# COPY --from=frontend-final /app/build /app/src/static
# CMD ["node", "/app/src/index.js"]



ARG node_version=node:lts-alpine
FROM node:${node_version} AS build
WORKDIR /app
COPY package.json yarn.lock .
RUN yarn install --immutable
COPY . .
RUN yarn nx run api:build

FROM node:${node_version}
WORKDIR /app
ENV NODE_ENV=production
COPY package.json yarn.lock .
RUN yarn install --immutable
# RUN npm ci  # in production mode, skips devDependencies
COPY --from=build /app/dist dist
CMD ["node", "/dist/apps/api/main.js"]